services:

  application:
    container_name: webserver
    image: web_image
    build:
      context: ../
      dockerfile: dockerfile
    ports:
      - ${APP_PORT}
    depends_on:
      - database
      - redis
      - kafka
    restart: always

  nginx:
    container_name: nginx
    image: nginx:latest
    build:
      dockerfile: dockerfile
    ports:
      - "80:80"
    restart: always

  database:
    container_name: timescale-db
    image: timescale/timescaledb:latest-pg16
    ports:
      - ${POSTGRES_PORT}
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PW}
      POSTGRES_INITDB_ARGS: --encoding=UTF-8
    volumes:
      - postgresql:/var/lib/postgresql/data # 내부 마운트 디렉토리 Path
    restart: always

  redis:
    container_name: redis_redis-stack
    image: redis/redis-stack
    ports:
      - ${REDIS_PORT}
      - ${REDIS_STACK_PORT}
    restart: always

  zookeeper:
    image: zookeeper
    container_name: zookeeper
    ports:
      - ${ZOOKEEPER_PORT}
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: ${ZK_ENV_PORT}
    restart: always

  kafka:
    image: wurstmeister/kafka
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - ${KAFKA_PORT}
    environment:
      KAFKA_BROKER_ID: 1 # 카프카 브로커 ID
      KAFKA_CREATE_TOPICS: "RawData:1:2" # 컨테이너 생성시 토픽 생성
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:${KAFKA_ZK_CONN} # zookeeper 연결 대상 지정 (서비스 이름 : 컨테이너 내부 포트)
      KAFKA_ADVERTISED_HOST_NAME: 127.0.0.1
      KAFKA_ADVERTISED_PORT: 9092
#      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:9092
#      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
#      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
#      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    restart: always

  rabbitmq:
    image: rabbitmq
    container_name: rabbitmq
    ports:
      - ${RABBIT_PORT}
      - ${RABBIT_UI_PORT}
#    environment:
#      RABBITMQ_DEFAULT_USER: admin
#      RABBITMQ_DEFAULT_PASS: admin
    restart: always

volumes:
  postgresql: